  ${CF_FUNCTION_NAME}:
    Type: AWS::Serverless::Function
    Properties:
      MemorySize: ${MEMORY_SIZE}
      Timeout: ${TIMEOUT}
      FunctionName: ${FUNCTION_NAME}
      Handler: detail.handler
      Role:
        Fn::ImportValue:
          !Sub "\${Environment}-CircuitsEngineRole"
      CodeUri:
        Bucket: !Ref DeployBucketName
        Key: ${FUNCTION_NAME}-${VERSION}.zip
      Environment:
        Variables:
          MD5: ${VERSION}
          ${CUSTOM_VARIABLES}
  ${CF_FUNCTION_NAME}ApiResourceCircuitsDefinitionsDetails:
    Type: "AWS::ApiGateway::Resource"
    Properties:
      ParentId: !Ref ${ENV}CircuitsEngineCircuitDefinitionsEndpointApiResource
      PathPart: \"{circuitDefinition}\"
      RestApiId: !Ref CircuitsEngineAPI
  ${CF_FUNCTION_NAME}ApiResourceCircuitsDefinitionsDetailsGetModel:
    Type: "AWS::ApiGateway::Model"
    Properties:
      RestApiId: !Ref CircuitsEngineAPI
      ContentType: \"application/json\"
      Description: "Schema for Circuit Definitions"
      Name: \"CircuitDefinitionModel\"
      Schema:
        \"\$schema\": \"http://json-schema.org/draft-04/schema#\"
        title: CircuitDefinition
        type: object
        properties:
          circuitDefinitionId:
            type: string
          circuitName:
            type: string
          createdByRole:
            type: string
          createdByUser:
            type: string
          payloadSchemas:
            type: object
          status:
            type: string
  ${CF_FUNCTION_NAME}ApiResourceCircuitsDefinitionsDetailsGet:
    Type: "AWS::ApiGateway::Method"
    Properties:
      HttpMethod: \"GET\"
      OperationName: \"CircuitDefinitionGet\"
      ResourceId: !Ref ${CF_FUNCTION_NAME}ApiResourceCircuitsDefinitionsDetails
      RestApiId: !Ref CircuitsEngineAPI
      AuthorizationType: \"CUSTOM\"
      AuthorizerId: !Ref ApiGatewayAuthorizer
      MethodResponses:
        -
          StatusCode: "200"
          ResponseParameters:
              \"method.response.header.Access-Control-Allow-Methods\": \"'GET,OPTIONS'\"
              \"method.response.header.Access-Control-Allow-Headers\": \"'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'\"
              \"method.response.header.Access-Control-Allow-Origin\": \"'*'\"
          ResponseModels:
              "application/json": !Ref ${CF_FUNCTION_NAME}ApiResourceCircuitsDefinitionsDetailsGetModel
      Integration:
        Type: "AWS_PROXY"
        Uri: !Sub arn:aws:apigateway:\${AWS::Region}:lambda:path/2015-03-31/functions/\${${CF_FUNCTION_NAME}.Arn}/invocations
        IntegrationResponses:
          -
            StatusCode: "200"
            ResponseParameters:
              \"method.response.header.Access-Control-Allow-Methods\": \"'GET,OPTIONS'\"
              \"method.response.header.Access-Control-Allow-Headers\": \"'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'\"
              \"method.response.header.Access-Control-Allow-Origin\": \"'*'\"
        IntegrationHttpMethod: \"POST\"
        ContentHandling: "CONVERT_TO_TEXT"
  ${CF_FUNCTION_NAME}ApiResourceMethodOptions:
    Type: "AWS::ApiGateway::Method"
    Properties:
      HttpMethod: \"OPTIONS\"
      OperationName: \"CircuitDefinitionOptions\"
      ResourceId: !Ref ${CF_FUNCTION_NAME}ApiResourceCircuitsDefinitionsDetails
      RestApiId: !Ref CircuitsEngineAPI
      AuthorizationType: NONE
      MethodResponses:
        -
          StatusCode: "200"
          ResponseParameters:
              \"method.response.header.Access-Control-Allow-Methods\": \"'GET,OPTIONS'\"
              \"method.response.header.Access-Control-Allow-Headers\": \"'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'\"
              \"method.response.header.Access-Control-Allow-Origin\": \"'*'\"
          ResponseModels:
              "application/json": "Empty"
      Integration:
        Type: "MOCK"
        IntegrationResponses:
          -
            StatusCode: "200"
            ResponseParameters:
              \"method.response.header.Access-Control-Allow-Methods\": \"'GET,OPTIONS'\"
              \"method.response.header.Access-Control-Allow-Headers\": \"'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'\"
              \"method.response.header.Access-Control-Allow-Origin\": \"'*'\"
        RequestTemplates:
              application/json: \"{\\\"statusCode\\\": 200}\"
        PassthroughBehavior: \"when_no_match\"
        IntegrationHttpMethod: \"POST\"
        ContentHandling: CONVERT_TO_TEXT

  ${CF_FUNCTION_NAME}LambdaInvokePermission:
    Type: 'AWS::Lambda::Permission'
    Properties:
      FunctionName: !GetAtt ${CF_FUNCTION_NAME}.Arn
      Action: 'lambda:InvokeFunction'
      Principal: apigateway.amazonaws.com
      SourceArn: !Join [\"\",[\"arn:aws:execute-api:\", !Ref \"AWS::Region\" , \":\", !Ref \"AWS::AccountId\", \":\", !Ref CircuitsEngineAPI, \"/*/GET/circuit_definitions/*\"]]